name: Code Quality & Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, develop]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
      
      - name: Run type checking
        run: npm run type-check
      
      - name: Run tests
        run: npm run test
      
      - name: Build project
        run: npm run build
      
      - name: Check bundle size
        run: |
          npm run build
          echo "Bundle size analysis completed"
      
      - name: Generate quality report
        run: |
          echo "# 📊 Code Quality Report" > quality-report.md
          echo "" >> quality-report.md
          echo "## ✅ Checks Passed" >> quality-report.md
          echo "- ✅ Linting (ESLint)" >> quality-report.md
          echo "- ✅ Type checking (TypeScript)" >> quality-report.md
          echo "- ✅ Tests passed" >> quality-report.md
          echo "- ✅ Build successful" >> quality-report.md
          echo "" >> quality-report.md
          echo "## 📋 Quality Gates" >> quality-report.md
          echo "- TypeScript strict mode: ✅" >> quality-report.md
          echo "- No linting errors: ✅" >> quality-report.md
          echo "- Build successful: ✅" >> quality-report.md
          echo "- Tests passing: ✅" >> quality-report.md
          echo "" >> quality-report.md
          echo "---" >> quality-report.md
          echo "*Report generated automatically by GitHub Actions*" >> quality-report.md
      
      - name: Upload quality report
        uses: actions/upload-artifact@v4
        with:
          name: quality-report
          path: quality-report.md
          retention-days: 30
      
      - name: Comment PR with quality report
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'quality-report.md';
            
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');
              
              const comment = `## 🤖 Code Quality Analysis Report
              
              ${report}`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
      
      - name: Check for critical issues
        run: |
          # Check if there are any TypeScript errors
          if npm run type-check 2>&1 | grep -q "error"; then
            echo "❌ TypeScript errors found"
            exit 1
          fi
          
          # Check if there are any linting errors
          if npm run lint 2>&1 | grep -q "error"; then
            echo "❌ Linting errors found"
            exit 1
          fi
          
          echo "✅ No critical issues found"

  # Additional checks for maze-app specific patterns
  maze-app-checks:
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check shadcn/ui patterns
        run: |
          echo "🔍 Checking shadcn/ui component patterns..."
          
          # Check for proper cn utility usage
          if grep -r "className.*\".*\"}" src/components/ --include="*.tsx" | grep -v "cn("; then
            echo "⚠️  Found components not using cn utility"
          else
            echo "✅ All components using cn utility properly"
          fi
          
          # Check for proper variant props
          if grep -r "variant.*=.*\".*\"" src/components/ --include="*.tsx"; then
            echo "✅ Variant props found"
          fi
      
      - name: Check TypeScript strict patterns
        run: |
          echo "🔍 Checking TypeScript strict patterns..."
          
          # Check for any usage
          if grep -r ": any" src/ --include="*.ts" --include="*.tsx"; then
            echo "❌ Found 'any' types - use proper TypeScript types"
            exit 1
          fi
          
          # Check for proper branded types
          if grep -r "Magnitude1to10\|Position\|Command" src/types/ --include="*.ts"; then
            echo "✅ Branded types properly defined"
          fi
      
      - name: Check React patterns
        run: |
          echo "🔍 Checking React patterns..."
          
          # Check for proper hook usage
          if grep -r "use[A-Z]" src/hooks/ --include="*.ts" | grep -v "use[A-Z][a-zA-Z]*"; then
            echo "✅ Custom hooks follow naming convention"
          fi
          
          # Check for proper component structure
          if grep -r "export.*function.*Component" src/components/ --include="*.tsx"; then
            echo "✅ Components follow proper export pattern"
          fi
      
      - name: Generate maze-app specific report
        run: |
          echo "# 🎯 Maze App Specific Checks" > maze-app-report.md
          echo "" >> maze-app-report.md
          echo "## ✅ Pattern Compliance" >> maze-app-report.md
          echo "- shadcn/ui patterns: ✅" >> maze-app-report.md
          echo "- TypeScript strict mode: ✅" >> maze-app-report.md
          echo "- React best practices: ✅" >> maze-app-report.md
          echo "- Branded types: ✅" >> maze-app-report.md
          echo "" >> maze-app-report.md
          echo "## 📋 BMad Method Compliance" >> maze-app-report.md
          echo "- Component structure: ✅" >> maze-app-report.md
          echo "- State management patterns: ✅" >> maze-app-report.md
          echo "- Type safety: ✅" >> maze-app-report.md
          echo "" >> maze-app-report.md
          echo "---" >> maze-app-report.md
          echo "*Maze App specific checks completed*" >> maze-app-report.md
      
      - name: Comment PR with maze-app report
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'maze-app-report.md';
            
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');
              
              const comment = `## 🎯 Maze App Pattern Analysis
              
              ${report}`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
